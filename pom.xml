<!--  
 Copyright (c) 2018 Amit Kumar Mondal
  
  All rights reserved. This program and the accompanying materials 
  are made available under the terms of the Eclipse Public License v1.0 
  which accompanies this distribution, and is available at 
  http://www.eclipse.org/legal/epl-v10.html 
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.amitinside</groupId>
	<artifactId>fatjar-maven-plugin</artifactId>
	<packaging>maven-plugin</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>FatJAR Maven Mojo</name>
	<description>
	This maven plugin is responsible to create a Fat JAR bundle containing all the dependencies 
	specified in a POM file. Sometimes users need to unpack specific dependency (eq. zip, tar etc) 
	before packing the dependency as this dependency could contain other jar files. The primary 
	motive is to collect all the dependencies including the plain jar dependencies and the other 
	jar dependencies that reside in other dependency (eq. zip, tar etc). Apart from this, it could 
	also update the versions of the specified dependencies before wrapping in a big fat JAR bundle. 
	This internally uses bnd to wrap all the dependencies in a single fat JAR.
	</description>
	<developers>
		<developer>
			<name>Amit Kumar Mondal</name>
			<email>amit@amitinside.com</email>
			<organization>Deutsche Telekom AG</organization>
			<organizationUrl>http://www.telekom.de</organizationUrl>
		</developer>
	</developers>

	<licenses>
		<license>
			<name>Eclipse Public License - v 1.0</name>
			<url>https://www.eclipse.org/legal/epl-v10.html</url>
		</license>
	</licenses>

	<distributionManagement>
		<repository>
			<id>oss.sonatype.org</id>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
		<snapshotRepository>
			<id>oss.sonatype.org</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<scm>
		<connection>scm:git:git@github.com:amitjoy/fatjar-maven-plugin.git</connection>
		<developerConnection>scm:git:git@github.com:amitjoy/fatjar-maven-plugin.git</developerConnection>
		<url>git@github.com:amitjoy/fatjar-maven-plugin.git</url>
	</scm>

	<properties>
		<project.java.version>1.8</project.java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<compiler.plugin.version>3.7.0</compiler.plugin.version>
		<maven-source-plugin.version>3.0.1</maven-source-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven.assembly.plugin.version>3.1.0</maven.assembly.plugin.version>
		<maven.nexus.staging.plugin.version>1.6.8</maven.nexus.staging.plugin.version>
		<maven.plugin.plugin.version>3.4</maven.plugin.plugin.version>
		<maven-javadoc-plugin.version>3.0.0-M1</maven-javadoc-plugin.version>
		<guava.version>23.0</guava.version>
		<invoker.version>3.0.0</invoker.version>
		<zip4j.version>1.3.2</zip4j.version>
		<commons.io.version>2.6</commons.io.version>
		<commons.cli.version>1.4</commons.cli.version>
		<maven.model.version>3.5.2</maven.model.version>
		<maven.plugin.version>2.0</maven.plugin.version>
		<maven.project.version>2.2.1</maven.project.version>
		<mojo.executor.version>2.2.0</mojo.executor.version>
		<maven.plugin.annotation.version>3.5.1</maven.plugin.annotation.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.shared</groupId>
			<artifactId>maven-invoker</artifactId>
			<version>${invoker.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-model</artifactId>
			<version>${maven.model.version}</version>
		</dependency>
		<dependency>
			<groupId>net.lingala.zip4j</groupId>
			<artifactId>zip4j</artifactId>
			<version>${zip4j.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>${commons.cli.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-plugin-api</artifactId>
			<version>${maven.plugin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven</groupId>
			<artifactId>maven-project</artifactId>
			<version>${maven.project.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugin-tools</groupId>
			<artifactId>maven-plugin-annotations</artifactId>
			<version>${maven.plugin.annotation.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.twdata.maven</groupId>
			<artifactId>mojo-executor</artifactId>
			<version>${mojo.executor.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler.plugin.version}</version>
				<configuration>
					<source>${project.java.version}</source>
					<target>${project.java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<compilerArgument>-proc:none</compilerArgument>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven-javadoc-plugin.version}</version>
                <configuration>
                    <additionalparam>-Xdoclint:none</additionalparam>
                    <excludePackageNames>com.amitinside.featureflags.internal</excludePackageNames>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<version>${maven.plugin.plugin.version}</version>
				<executions>
					<execution>
						<id>mojo-descriptor</id>
						<goals>
							<goal>descriptor</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<skipErrorNoDescriptorsFound>true</skipErrorNoDescriptorsFound>
				</configuration>
			</plugin>
			<plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
			<plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>${maven.nexus.staging.plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>oss.sonatype.org</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                </configuration>
                <executions>
                    <execution>
                        <id>deploy-to-sonatype</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy</goal>
                            <goal>release</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
		</plugins>
	</build>
</project>